name: Deploy News App (Free Tier)


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Frontend
      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: CI=false npm run build

      # Backend
      - name: Setup Node.js (Backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Run backend build/test
        working-directory: backend
        run: npm run build || echo "No build step for backend"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3

      # Build Docker images
      - name: Build Docker images
        run: |
          docker build -t news-frontend:latest ./frontend
          docker build -t news-backend:latest ./backend
          docker save news-frontend:latest | gzip > news-frontend.tar.gz
          docker save news-backend:latest | gzip > news-backend.tar.gz

      # Copy to EC2
      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "news-frontend.tar.gz,news-backend.tar.gz,docker-compose.yml"
          target: "/opt/news-app/"

      # Deploy on EC2
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export NEWS_API_KEY=${{ secrets.NEWS_API_KEY }}
            export JWT_SECRET=${{secrets.JWT_SECRET}}
            cd /opt/news-app
            docker load < news-frontend.tar.gz
            docker load < news-backend.tar.gz
            docker-compose down
            docker-compose up -d --build --no-cache
