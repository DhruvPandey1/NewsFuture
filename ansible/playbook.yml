---
- name: Deploy News Application (Free Tier Only)
  hosts: web_servers
  become: yes
  vars:
    app_name: news-app
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - docker.io
          - docker-compose
          - nginx
          - git
        state: present

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Create application directory
      file:
        path: /opt/{{ app_name }}
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create data directory for SQLite
      file:
        path: /opt/{{ app_name }}/data
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy docker-compose file
      copy:
        content: |
          version: '3.8'
          services:
            app:
              image: {{ app_name }}:latest
              ports:
                - "3000:80"
              environment:
                - NODE_ENV=production
                - DATABASE_URL=sqlite:///data/news.db
              volumes:
                - ./data:/data
              restart: unless-stopped
        dest: /opt/{{ app_name }}/docker-compose.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Configure Nginx
      copy:
        content: |
          server {
              listen 80;
              server_name _;
              
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/sites-available/{{ app_name }}
        backup: yes

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t
      changed_when: false

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes

